import Head from "next/head";
import { useEffect, useState } from "react";

import Ballot from "../components/Ballot";
import Modal from "../components/Modal";

import styles from "../styles/Home.module.css";

import { API_ENDPOINT, ITEMS_PROPERTY, SELECTION_PROPERTY } from "../constants";
import type { BallotInterface } from "../types";

const Home = () => {
  const [ballots, setBallots] = useState<BallotInterface[] | []>([]);
  const [dataReady, setDataReady] = useState<boolean>(false);
  const [showModal, setShowModal] = useState<boolean>(false);

  useEffect(() => {
    fetch(API_ENDPOINT)
      .then((res) => res.json())
      .then((ballots) => {
        setBallots(ballots[ITEMS_PROPERTY]);

        setDataReady(true);
      });
  }, []);

  const handleBallotSelection = (category: string, selection: string): void => {
    let newState = [...ballots];
    const indexOfItemToUpdate = newState.findIndex(
      (ballot) => ballot.id === category
    );
    newState[indexOfItemToUpdate].selection = selection;

    setBallots([...newState]);
  };

  const handleOpenModal = (): void => {
    setShowModal(true);
  };

  const handleCloseModal = (): void => {
    const newState = ballots.map((ballot) => {
      delete ballot[SELECTION_PROPERTY];
      return ballot;
    });

    setBallots([...newState]);
    setShowModal(false);
  };

  if (!dataReady) {
    return <h1>Loading...</h1>;
  }

  const allBallotsHaveASelection = (): boolean => {
    return ballots.every((selection) =>
      selection.hasOwnProperty(SELECTION_PROPERTY)
    );
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Nick&apos;s Test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>Awards 2021</h1>

        {ballots?.map((ballot, index: number) => (
          <Ballot
            key={index}
            ballot={ballot}
            setBallotSelection={handleBallotSelection}
          />
        ))}

        {!showModal && (
          <button
            disabled={!allBallotsHaveASelection()}
            onClick={handleOpenModal}
            className={styles.submitBallotButton}
          >
            Submit Ballot
          </button>
        )}

        {showModal && <Modal ballots={ballots} closeModal={handleCloseModal} />}
      </main>
    </div>
  );
};

export default Home;
